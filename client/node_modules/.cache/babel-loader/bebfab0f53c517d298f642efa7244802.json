{"ast":null,"code":"var _jsxFileName = \"/Users/alan2305/Documents/project/hackeresume/client/src/Routes/Posts/Posts.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport PostForm from '../../components/PostForm';\nimport PostFeed from '../../components/PostFeed';\nimport Spinner from '../common/Spinner';\nimport { getPosts } from '../../actions/post';\n\nclass Posts extends Component {\n  componentDidMount() {\n    this.props.getPosts();\n  }\n\n  render() {\n    const _this$props$post = this.props.post,\n          posts = _this$props$post.posts,\n          loading = _this$props$post.loading;\n    let postContent;\n\n    if (posts === null || loading) {\n      postContent = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      });\n    } else {\n      postContent = React.createElement(PostFeed, {\n        posts: posts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"feed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(PostForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), postContent))));\n  }\n\n}\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);","map":{"version":3,"sources":["/Users/alan2305/Documents/project/hackeresume/client/src/Routes/Posts/Posts.js"],"names":["React","Component","PropTypes","connect","PostForm","PostFeed","Spinner","getPosts","Posts","componentDidMount","props","render","post","posts","loading","postContent","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAC1BQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWH,QAAX;AACH;;AACDI,EAAAA,MAAM,GAAG;AAAA,6BACsB,KAAKD,KAAL,CAAWE,IADjC;AAAA,UACGC,KADH,oBACGA,KADH;AAAA,UACUC,OADV,oBACUA,OADV;AAEL,QAAIC,WAAJ;;AAEA,QAAIF,KAAK,KAAK,IAAV,IAAkBC,OAAtB,EAA+B;AAC3BC,MAAAA,WAAW,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACH,KAFD,MAEO;AACHA,MAAAA,WAAW,GAAG,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACH;;AACD,WACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKE,WAFL,CADJ,CADJ,CADJ,CADJ;AAYH;;AAzByB;;AA4B9BP,KAAK,CAACQ,SAAN,GAAkB;AACdT,EAAAA,QAAQ,EAAEL,SAAS,CAACe,IAAV,CAAeC,UADX;AAEdN,EAAAA,IAAI,EAAEV,SAAS,CAACiB,MAAV,CAAiBD;AAFT,CAAlB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADkB,CAAL,CAA7B;;AAIA,eAAeT,OAAO,CAACiB,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,KAAvC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport PostForm from '../../components/PostForm';\nimport PostFeed from '../../components/PostFeed';\nimport Spinner from '../common/Spinner';\nimport { getPosts } from '../../actions/post';\n\nclass Posts extends Component {\n    componentDidMount() {\n        this.props.getPosts()\n    }\n    render() {\n        const { posts, loading } = this.props.post;\n        let postContent;\n\n        if (posts === null || loading) {\n            postContent = <Spinner />;\n        } else {\n            postContent = <PostFeed posts={posts} />;\n        }\n        return (\n            <div className=\"feed\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <PostForm />\n                            {postContent}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPosts.propTypes = {\n    getPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    post: state.post\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);\n"]},"metadata":{},"sourceType":"module"}