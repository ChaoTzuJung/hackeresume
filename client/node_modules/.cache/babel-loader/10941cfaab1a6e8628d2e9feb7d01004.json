{"ast":null,"code":"var _jsxFileName = \"/Users/AlanChao/Documents/React Project/hackeresume/client/src/Routes/Login/Login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/auth';\nimport TextFeildGroup from '../../components/TextFeildGroup';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // 不希望登入後，還能透過修改網址，進入到login頁面\n\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  } // 重要: error不要變成props原因(把傳過來的props加到狀態)\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault(); // 重要\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.loginUser(userData);\n  }\n\n  render() {\n    // 重要 error要留著當state沒有變成props\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(\"p\", {\n      className: \"lead text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Sign in to your DevConnector account\"), React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(TextFeildGroup, {\n      type: \"email\",\n      placeholder: \"Email Address\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      error: errors.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(TextFeildGroup, {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      error: errors.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-info btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/Users/AlanChao/Documents/React Project/hackeresume/client/src/Routes/Login/Login.js"],"names":["React","Component","PropTypes","connect","loginUser","TextFeildGroup","Login","constructor","state","email","password","errors","handleChange","bind","handleSubmit","componentDidMount","props","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","setState","e","target","name","value","preventDefault","userData","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/auth';\nimport TextFeildGroup from '../../components/TextFeildGroup';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    } \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  // 不希望登入後，還能透過修改網址，進入到login頁面\n  componentDidMount() {\n    if(this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  // 重要: error不要變成props原因(把傳過來的props加到狀態)\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n\n    if(nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    // 重要\n    const userData = {\n      email: this.state.email,\n      password: this.state.password,\n    }\n\n    this.props.loginUser(userData)\n  }\n  render() {\n    // 重要 error要留著當state沒有變成props\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <p className=\"lead text-center\">Sign in to your DevConnector account</p>\n              <form noValidate onSubmit={this.handleSubmit}>\n                <TextFeildGroup \n                  type=\"email\"\n                  placeholder=\"Email Address\"\n                  name=\"email\"\n                  value={this.state.email}\n                  onChange={this.handleChange}\n                  error={errors.email}\n                />\n                <TextFeildGroup \n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                  error={errors.password}\n                />\n                <input \n                  type=\"submit\"\n                  className=\"btn btn-info btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n})\n\nexport default connect(mapStateToProps, { loginUser })(Login);"]},"metadata":{},"sourceType":"module"}