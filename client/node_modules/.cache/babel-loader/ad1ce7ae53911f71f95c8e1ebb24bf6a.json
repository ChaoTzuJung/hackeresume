{"ast":null,"code":"import axios from 'axios';\nimport { ADD_POST, GET_ERROR, GET_POSTS, POST_LOADING, DELETE_POST, GET_POST, CLEAR_ERROR } from './types'; // Add Post\n\nexport const addPost = postData => dispatch => {\n  dispatch(clearErrors());\n  axios.post('/api/posts', postData).then(res => dispatch({\n    type: ADD_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERROR,\n    payload: err.response.data\n  }));\n}; // Get All Posts\n\nexport const getPosts = () => dispatch => {\n  dispatch(setPostLoading());\n  axios.get('/api/posts').then(res => dispatch({\n    type: GET_POSTS,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_POSTS,\n    payload: null\n  }));\n}; // Get single Post\n\nexport const getPost = id => dispatch => {\n  dispatch(setPostLoading());\n  axios.get(\"/api/posts/\".concat(id)) // 重要: 會用網址的 :id 取相對post\n  .then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_POST,\n    payload: null\n  }));\n}; // Set loading state\n\nexport const setPostLoading = () => {\n  return {\n    type: POST_LOADING\n  };\n}; // Delete Post\n\nexport const deletePost = id => dispatch => {\n  axios.delete(\"/api/posts/\".concat(id)).then(res => dispatch({\n    type: DELETE_POST,\n    payload: id\n  })) // 重要: 刪除是送id給reducer\n  .catch(err => dispatch({\n    type: GET_ERROR,\n    payload: err.response.data\n  }));\n}; // Add Like\n\nexport const addLike = id => dispatch => {\n  axios.post(\"/api/posts/like/\".concat(id)).then(res => dispatch(getPosts())) // 重要 getPosts 是更新 like資訊\n  .catch(err => dispatch({\n    type: GET_ERROR,\n    payload: err.response.data\n  }));\n}; // Remove Like\n\nexport const removeLike = id => dispatch => {\n  axios.post(\"/api/posts/unlike/\".concat(id)).then(res => dispatch(getPosts())) // 重要 getPosts 是更新 like資訊\n  .catch(err => dispatch({\n    type: GET_ERROR,\n    payload: err.response.data\n  }));\n}; // Add comment\n\nexport const addComment = (commentId, commentData) => dispatch => {\n  dispatch(clearErrors());\n  axios.post(\"/api/posts/comment/\".concat(commentId), commentData) // 超重要: 為何是GET_POST? 最後因為接收action payload(comments array（內涵多個object）) 的 global state 仍是 post object\n  .then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERROR,\n    payload: err.response.data\n  }));\n}; // Delete Comment\n\nexport const deleteComment = (postId, commentId) => dispatch => {\n  axios.delete(\"/api/posts/comment/\".concat(postId, \"/\").concat(commentId)).then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERROR,\n    payload: err.response.data\n  }));\n}; // Clear errors\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERROR\n  };\n};","map":{"version":3,"sources":["/Users/AlanChao/Documents/React Project/hackeresume/client/src/actions/post.js"],"names":["axios","ADD_POST","GET_ERROR","GET_POSTS","POST_LOADING","DELETE_POST","GET_POST","CLEAR_ERROR","addPost","postData","dispatch","clearErrors","post","then","res","type","payload","data","catch","err","response","getPosts","setPostLoading","get","getPost","id","deletePost","delete","addLike","removeLike","addComment","commentId","commentData","deleteComment","postId"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { ADD_POST, GET_ERROR, GET_POSTS, POST_LOADING, DELETE_POST, GET_POST, CLEAR_ERROR } from './types';\n\n// Add Post\nexport const addPost = postData => dispatch => {\n    dispatch(clearErrors());\n    axios\n        .post('/api/posts', postData)\n        .then(res => dispatch({ type: ADD_POST, payload: res.data }))\n        .catch(err => dispatch({ type: GET_ERROR, payload: err.response.data }));\n};\n\n// Get All Posts\nexport const getPosts = () => dispatch => {\n    dispatch(setPostLoading());\n    axios\n        .get('/api/posts')\n        .then(res => dispatch({ type: GET_POSTS, payload: res.data }))\n        .catch(err => dispatch({ type: GET_POSTS, payload: null }));\n};\n\n// Get single Post\nexport const getPost = id => dispatch => {\n    dispatch(setPostLoading());\n    axios\n        .get(`/api/posts/${id}`) // 重要: 會用網址的 :id 取相對post\n        .then(res => dispatch({ type: GET_POST, payload: res.data }))\n        .catch(err => dispatch({ type: GET_POST, payload: null }));\n};\n\n// Set loading state\nexport const setPostLoading = () => {\n    return {\n        type: POST_LOADING\n    };\n};\n\n// Delete Post\nexport const deletePost = id => dispatch => {\n    axios\n        .delete(`/api/posts/${id}`)\n        .then(res => dispatch({ type: DELETE_POST, payload: id })) // 重要: 刪除是送id給reducer\n        .catch(err => dispatch({ type: GET_ERROR, payload: err.response.data}));\n};\n\n// Add Like\nexport const addLike = id => dispatch => {\n    axios\n        .post(`/api/posts/like/${id}`)\n        .then(res => dispatch(getPosts())) // 重要 getPosts 是更新 like資訊\n        .catch(err =>\n        dispatch({ type: GET_ERROR, payload: err.response.data }));\n};\n\n// Remove Like\nexport const removeLike = id => dispatch => {\n    axios\n        .post(`/api/posts/unlike/${id}`)\n        .then(res => dispatch(getPosts())) // 重要 getPosts 是更新 like資訊\n        .catch(err =>\n        dispatch({ type: GET_ERROR, payload: err.response.data }));\n};\n\n// Add comment\nexport const addComment = (commentId, commentData) => dispatch => {\n    dispatch(clearErrors());\n    axios\n        .post(`/api/posts/comment/${commentId}`, commentData)\n        // 超重要: 為何是GET_POST? 最後因為接收action payload(comments array（內涵多個object）) 的 global state 仍是 post object\n        .then(res => dispatch({ type: GET_POST, payload: res.data }))\n        .catch(err => dispatch({ type: GET_ERROR, payload: err.response.data }));\n};\n\n\n// Delete Comment\nexport const deleteComment = (postId, commentId) => dispatch => {\n    axios\n        .delete(`/api/posts/comment/${postId}/${commentId}`)\n        .then(res => dispatch({ type: GET_POST, payload: res.data }))\n        .catch(err => dispatch({ type: GET_ERROR, payload: err.response.data}));\n};\n\n// Clear errors\nexport const clearErrors = () => {\n    return {\n        type: CLEAR_ERROR\n    };\n};\n"]},"metadata":{},"sourceType":"module"}