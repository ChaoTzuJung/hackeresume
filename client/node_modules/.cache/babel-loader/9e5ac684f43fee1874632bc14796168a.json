{"ast":null,"code":"var _jsxFileName = \"/Users/alan2305/Documents/project/hackeresume/client/src/Routes/Register/Register.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/auth';\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: '',\n      errors: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // 重要: error不要變成props原因\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault(); // 重要\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n    this.props.registerUser(newUser, this.props.history);\n  }\n\n  render() {\n    // 重要 error要留著當state沒有變成props\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      className: \"register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"p\", {\n      className: \"lead text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Create your DevConnector account\"), React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control form-control-lg\" // 重要: is-invalid 是  bootstrap 的 invalid 方法 可以接 state\n      ,\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': errors.name\n      }),\n      placeholder: \"Name\",\n      name: \"name\",\n      required: true,\n      value: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), errors.name && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, errors.name)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': errors.email\n      }),\n      placeholder: \"Email Address\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), errors.email && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, errors.email), React.createElement(\"small\", {\n      className: \"form-text text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"This site uses Gravatar so if you want a profile image, use a Gravatar email\")), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': errors.password\n      }),\n      placeholder: \"Password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), errors.password && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, errors.password)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': errors.password2\n      }),\n      placeholder: \"Confirm Password\",\n      name: \"password2\",\n      value: this.state.password2,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), errors.password2 && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, errors.password2)), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-info btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nregisterUser.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n}\n\n;\nexport default connect(mapStateToProps, {\n  registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["/Users/alan2305/Documents/project/hackeresume/client/src/Routes/Register/Register.js"],"names":["React","Component","PropTypes","withRouter","classnames","connect","registerUser","Register","constructor","state","name","email","password","password2","errors","handleChange","bind","handleSubmit","componentWillReceiveProps","nextProps","setState","e","target","value","preventDefault","newUser","props","history","render","propTypes","func","isRequired","auth","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/auth';\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: '',\n      errors: {}\n    } \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // 重要: error不要變成props原因\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    // 重要\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n    }\n\n    this.props.registerUser(newUser, this.props.history)\n  }\n\n  render() {\n    // 重要 error要留著當state沒有變成props\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your DevConnector account</p>\n              {/* noValidate  */}\n              <form noValidate onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    // 重要: is-invalid 是  bootstrap 的 invalid 方法 可以接 state\n                    className={classnames('form-control form-control-lg', { 'is-invalid': errors.name })}\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    required\n                    value={this.state.name}\n                    onChange={this.handleChange}\n                  />\n                  {errors.name && <div className=\"invalid-feedback\">{errors.name}</div>}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames('form-control form-control-lg', { 'is-invalid': errors.email })}\n                    placeholder=\"Email Address\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.handleChange}\n                  />\n                  {errors.email && <div className=\"invalid-feedback\">{errors.email}</div>}\n                  <small className=\"form-text text-muted\">This site uses Gravatar so if you want a profile image, use a Gravatar email</small>\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames('form-control form-control-lg', { 'is-invalid': errors.password })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.handleChange}\n                  />\n                  {errors.password && <div className=\"invalid-feedback\">{errors.password}</div>}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames('form-control form-control-lg', { 'is-invalid': errors.password2 })}\n                    placeholder=\"Confirm Password\"\n                    name=\"password2\"\n                    value={this.state.password2}\n                    onChange={this.handleChange}\n                  />\n                  {errors.password2 && <div className=\"invalid-feedback\">{errors.password2}</div>}\n                </div>\n                <input\n                  type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nregisterUser.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors,\n  }\n};\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));"]},"metadata":{},"sourceType":"module"}