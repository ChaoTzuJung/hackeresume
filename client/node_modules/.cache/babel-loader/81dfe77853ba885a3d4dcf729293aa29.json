{"ast":null,"code":"var _jsxFileName = \"/Users/alan2305/Documents/project/hackeresume/client/src/Routes/Dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\nimport Spinner from '../../components/Spinner';\nimport ProfileActions from '../../components/ProfileActions';\nimport Experience from '../../components/Experience';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDeleteClick = e => {\n      this.props.deleteAccount();\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCurrentProfile();\n  }\n\n  render() {\n    const user = this.props.auth.user;\n    const _this$props$profile = this.props.profile,\n          profile = _this$props$profile.profile,\n          loading = _this$props$profile.loading;\n    let dashboardContent;\n\n    if (profile === null || loading) {\n      dashboardContent = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n    } else {\n      // Check if login user has profile data\n      if (Object.keys(profile).length > 0) {\n        dashboardContent = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"lead text-muted\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Welcome \", React.createElement(Link, {\n          to: \"/profile/\".concat(profile.handle),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, user.name)), React.createElement(ProfileActions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }), React.createElement(Experience, {\n          experiences: profile.experience,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          style: {\n            marginBottom: '60px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.onDeleteClick,\n          className: \"btn btn-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"Delete My Account\"));\n      } else {\n        // User is logged but has no profile \n        dashboardContent = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"lead text-muted\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Welcome \", user.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"You have not yet setup a profile, please add some info\"), React.createElement(Link, {\n          to: \"/create-profile\",\n          className: \"btn btn-lg btn-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Create Profile\"));\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Dashboard\"), dashboardContent))));\n  }\n\n}\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile,\n  deleteAccount\n})(Dashboard);","map":{"version":3,"sources":["/Users/alan2305/Documents/project/hackeresume/client/src/Routes/Dashboard/Dashboard.js"],"names":["React","Component","Link","PropTypes","connect","getCurrentProfile","deleteAccount","Spinner","ProfileActions","Experience","Dashboard","onDeleteClick","e","props","componentDidMount","render","user","auth","profile","loading","dashboardContent","Object","keys","length","handle","name","experience","marginBottom","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\nimport Spinner from '../../components/Spinner';\nimport ProfileActions from '../../components/ProfileActions';\nimport Experience from '../../components/Experience';\n\nclass Dashboard extends Component {\n    componentDidMount() {\n        this.props.getCurrentProfile();\n    }\n\n    onDeleteClick = (e) => {\n        this.props.deleteAccount();\n    };\n\n    render() {\n        const { user } = this.props.auth\n        const { profile, loading } = this.props.profile\n        let dashboardContent;\n\n        if (profile === null || loading){\n            dashboardContent = <Spinner />;\n        } else {\n            // Check if login user has profile data\n            if (Object.keys(profile).length > 0) {\n                dashboardContent = (\n                    <div>\n                        <p className=\"lead text-muted\">\n                            Welcome <Link to={`/profile/${profile.handle}`}>{user.name}</Link>\n                        </p>\n                        <ProfileActions />\n                        <Experience experiences={profile.experience}/>\n                        <div style={{ marginBottom: '60px' }} />\n                        <button onClick={this.onDeleteClick} className=\"btn btn-danger\">Delete My Account</button>\n                    </div>\n                );\n            } else {\n                // User is logged but has no profile \n                dashboardContent = (\n                    <div>\n                        <p className=\"lead text-muted\">Welcome { user.name }</p>\n                        <p>You have not yet setup a profile, please add some info</p>\n                        <Link to='/create-profile' className=\"btn btn-lg btn-info\">Create Profile</Link>\n                    </div>\n                )\n            }\n        }\n\n        return (\n            <div className=\"dashboard\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <h1 className=\"display-4\">Dashboard</h1>\n                            {dashboardContent}\n                    </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    deleteAccount: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n} \n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}