{"ast":null,"code":"var _jsxFileName = \"/Users/AlanChao/Documents/React Project/hackeresume/client/src/Routes/Profiles/Profiles.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfiles } from '../../actions/profile';\nimport Spinner from '../../components/Spinner';\n\nclass Profiles extends Component {\n  componentDidMount() {\n    this.props.getProfiles();\n  }\n\n  render() {\n    const _this$props$profile = this.props.profile,\n          loading = _this$props$profile.loading,\n          profiles = _this$props$profile.profiles;\n    let profileItems;\n\n    if (profiles === null || loading) {\n      profileItems = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      });\n    } else {\n      if (profiles.length > 0) {\n        profileItems = React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"Profile Here\");\n      } else {\n        profileItems = React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"No Profiles found...\");\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"profiles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Developer Profiles\"), React.createElement(\"p\", {\n      className: \"lead text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Browser and connect with developer\"), profileItems))));\n  }\n\n}\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profiles\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["/Users/AlanChao/Documents/React Project/hackeresume/client/src/Routes/Profiles/Profiles.js"],"names":["React","Component","PropTypes","connect","getProfiles","Spinner","Profiles","componentDidMount","props","render","profile","loading","profiles","profileItems","length","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC7BM,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,WAAX;AACH;;AACDK,EAAAA,MAAM,GAAG;AAAA,gCACyB,KAAKD,KAAL,CAAWE,OADpC;AAAA,UACGC,OADH,uBACGA,OADH;AAAA,UACYC,QADZ,uBACYA,QADZ;AAEL,QAAIC,YAAJ;;AACA,QAAID,QAAQ,KAAK,IAAb,IAAqBD,OAAzB,EAAkC;AAC9BE,MAAAA,YAAY,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AACH,KAFD,MAEO;AACH,UAAGD,QAAQ,CAACE,MAAT,GAAkB,CAArB,EAAwB;AACpBD,QAAAA,YAAY,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAf;AACH,OAFD,MAEO;AACHA,QAAAA,YAAY,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAf;AACH;AACJ;;AAED,WACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,EAKKA,YALL,CADJ,CADJ,CADJ,CADJ;AAgBH;;AAjC4B;;AAoCjCP,QAAQ,CAACS,SAAT,GAAqB;AACjBX,EAAAA,WAAW,EAAEF,SAAS,CAACc,IAAV,CAAeC,UADX;AAEjBP,EAAAA,OAAO,EAAER,SAAS,CAACgB,MAAV,CAAiBD;AAFT,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,OAAO,EAAEU,KAAK,CAACR;AADe,CAAL,CAA7B;;AAIA,eAAeT,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAA0CE,QAA1C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfiles } from '../../actions/profile';\nimport Spinner from '../../components/Spinner';\n\nclass Profiles extends Component {\n    componentDidMount() {\n        this.props.getProfiles();\n    }\n    render() {\n        const { loading, profiles } = this.props.profile\n        let profileItems;\n        if (profiles === null || loading) {\n            profileItems = <Spinner />;\n        } else {\n            if(profiles.length > 0) {\n                profileItems = <h1>Profile Here</h1>;\n            } else {\n                profileItems = <h1>No Profiles found...</h1>;\n            }\n        }\n\n        return(\n            <div className=\"profiles\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4 text-center\">Developer Profiles</h1>\n                            <p className=\"lead text-center\">\n                                Browser and connect with developer\n                            </p>\n                            {profileItems}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n}\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profiles,\n})\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n\n"]},"metadata":{},"sourceType":"module"}