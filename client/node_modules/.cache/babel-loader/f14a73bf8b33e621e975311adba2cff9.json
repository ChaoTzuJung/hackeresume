{"ast":null,"code":"var _jsxFileName = \"/Users/alan2305/Documents/project/hackeresume/client/src/components/PostForm/PostForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextAreaFieldGroup from '../../components/TextAreaFieldGroup';\nimport { addPost } from '../../actions/post';\n\nclass PostForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.errors) {\n      this.setState({\n        errors: newProps.errors\n      });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault(); // 重要: 要知道是哪個user留言與他留什麼言\n\n    const user = this.props.auth.user;\n    const newPost = {\n      text: this.state.text,\n      name: user.name,\n      avatar: user.avatar\n    };\n    this.props.addPost(newPost);\n    this.setState({\n      text: ''\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      className: \"post-form mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header bg-info text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Say Somthing...\"), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(TextAreaFieldGroup, {\n      placeholder: \"Create a post\",\n      name: \"text\",\n      value: this.state.text,\n      onChange: this.onChange,\n      error: errors.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  addPost\n})(PostForm);","map":{"version":3,"sources":["/Users/alan2305/Documents/project/hackeresume/client/src/components/PostForm/PostForm.js"],"names":["React","Component","PropTypes","connect","TextAreaFieldGroup","addPost","PostForm","constructor","props","state","text","errors","onChange","bind","onSubmit","componentWillReceiveProps","newProps","setState","e","preventDefault","user","auth","newPost","name","avatar","target","value","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextAreaFieldGroup from '../../components/TextAreaFieldGroup';\nimport { addPost } from '../../actions/post';\n\nclass PostForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: '',\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps.errors) {\n            this.setState({ errors: newProps.errors });\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        // 重要: 要知道是哪個user留言與他留什麼言\n        const { user } = this.props.auth;\n\n        const newPost = {\n            text: this.state.text,\n            name: user.name,\n            avatar: user.avatar\n        };\n\n        this.props.addPost(newPost);\n        this.setState({ text: '' });\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        const { errors } = this.state;\n\n        return (\n            <div className=\"post-form mb-3\">\n                <div className=\"card card-info\">\n                    <div className=\"card-header bg-info text-white\">Say Somthing...</div>\n                    <div className=\"card-body\">\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <TextAreaFieldGroup\n                                placeholder=\"Create a post\"\n                                name=\"text\"\n                                value={this.state.text}\n                                onChange={this.onChange}\n                                error={errors.text}\n                                />\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-dark\">\n                                Submit\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPostForm.propTypes = {\n    addPost: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, { addPost })(PostForm);\n"]},"metadata":{},"sourceType":"module"}