{"ast":null,"code":"var _jsxFileName = \"/Users/alan2305/Documents/project/hackeresume/client/src/Routes/App/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport jwt_decode from 'jwt-decode';\nimport store from '../../store';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from '../../actions/auth';\nimport { clearCurrentProfile } from '../../actions/profile';\nimport Navbar from '../../layouts/Navbar';\nimport Landing from '../../layouts/Landing';\nimport Footer from '../../layouts/Footer';\nimport Register from '../Register';\nimport Login from '../Login';\nimport Dashboard from '../Dashboard';\nimport PrivateRoute from '../Private'; // 防止為登入就進入dashboard\n\nimport './App.css'; // 為了讓換頁或重整都有保存登入資料，而且當直接開啟首頁不用再登入，因為token還沒過期\n// Check for token\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  setAuthToken(localStorage.jwtToken); // Decode token and get user info and explanation\n\n  const decoded = jwt_decode(localStorage.jwtToken); // Set user and isAuthenicated\n\n  store.dispatch(setCurrentUser(decoded)); // Check for expire token\n\n  const currentTime = Date.now() / 1000;\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Clear current profile\n\n    store.dispatch(clearCurrentProfile()); // Redirect to login (來自原生js的處理，手動地址跳轉)\n\n    window.location.href = '/login';\n  }\n} // Private Route 都要被Switch包著？ 解決 Redirct issue\n// Switch會控制只有在第一個Route符合path時才會渲染\n\n\nconst App = () => {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Landing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/register\",\n    component: Register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/dashboard\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/alan2305/Documents/project/hackeresume/client/src/Routes/App/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","Provider","jwt_decode","store","setAuthToken","setCurrentUser","logoutUser","clearCurrentProfile","Navbar","Landing","Footer","Register","Login","Dashboard","PrivateRoute","localStorage","jwtToken","decoded","dispatch","currentTime","Date","now","exp","window","location","href","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,YAAP,MAAyB,YAAzB,C,CAAuC;;AAGvC,OAAO,WAAP,C,CAEA;AACA;;AACA,IAAGC,YAAY,CAACC,QAAhB,EAA0B;AACxB;AACAZ,EAAAA,YAAY,CAACW,YAAY,CAACC,QAAd,CAAZ,CAFwB,CAGxB;;AACA,QAAMC,OAAO,GAAGf,UAAU,CAACa,YAAY,CAACC,QAAd,CAA1B,CAJwB,CAKxB;;AACAb,EAAAA,KAAK,CAACe,QAAN,CAAeb,cAAc,CAACY,OAAD,CAA7B,EANwB,CAQxB;;AACA,QAAME,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC;;AACA,MAAGJ,OAAO,CAACK,GAAR,GAAcH,WAAjB,EAA8B;AAC5B;AACAhB,IAAAA,KAAK,CAACe,QAAN,CAAeZ,UAAU,EAAzB,EAF4B,CAG5B;;AACAH,IAAAA,KAAK,CAACe,QAAN,CAAeX,mBAAmB,EAAlC,EAJ4B,CAK5B;;AACAgB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACD;AACF,C,CACD;AACA;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAChB,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEvB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEM,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEE,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,IAAI,EAAC,YAAzB;AAAsC,IAAA,SAAS,EAAEC,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CAHF,EAUE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CADF,CADF;AAkBD,CAnBD;;AAqBA,eAAea,GAAf","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport jwt_decode from 'jwt-decode';\nimport store from '../../store';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from '../../actions/auth';\nimport { clearCurrentProfile } from '../../actions/profile';\n\nimport Navbar from '../../layouts/Navbar';\nimport Landing from '../../layouts/Landing';\nimport Footer from '../../layouts/Footer';\n\nimport Register from '../Register';\nimport Login from '../Login';\nimport Dashboard from '../Dashboard';\nimport PrivateRoute from '../Private'; // 防止為登入就進入dashboard\n\n\nimport './App.css';\n\n// 為了讓換頁或重整都有保存登入資料，而且當直接開啟首頁不用再登入，因為token還沒過期\n// Check for token\nif(localStorage.jwtToken) {\n  // Set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  // Decode token and get user info and explanation\n  const decoded = jwt_decode(localStorage.jwtToken);\n  // Set user and isAuthenicated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expire token\n  const currentTime = Date.now() / 1000;\n  if(decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Clear current profile\n    store.dispatch(clearCurrentProfile());\n    // Redirect to login (來自原生js的處理，手動地址跳轉)\n    window.location.href = '/login';\n  }\n}\n// Private Route 都要被Switch包著？ 解決 Redirct issue\n// Switch會控制只有在第一個Route符合path時才會渲染\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Route exact path=\"/\" component={Landing}/>\n          <div className=\"container\">\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}